var CheckIsoBounds = require('./CheckIsoBounds');var IsometricCullTiles = function (layer, camera, outputArray, renderOrder){    if (outputArray === undefined) { outputArray = []; }    if (renderOrder === undefined) { renderOrder = 0; }    outputArray.length = 0;    var tilemapLayer = layer.tilemapLayer;    var mapData = layer.data;    var mapWidth = layer.width;    var mapHeight = layer.height;    var skipCull = tilemapLayer.skipCull;    var drawLeft = 0;    var drawRight = mapWidth;    var drawTop = 0;    var drawBottom = mapHeight;    var x;    var y;    var tile;    if (renderOrder === 0)    {        for (y = drawTop; y < drawBottom; y++)        {            for (x = drawLeft; x < drawRight; x++)            {                tile = mapData[y][x];                if (!tile || tile.index === -1 || !tile.visible || tile.alpha === 0)                {                    continue;                }                if (!skipCull && !CheckIsoBounds(x, y, layer, camera))                {                    continue;                }                outputArray.push(tile);            }        }    }    else if (renderOrder === 1)    {        for (y = drawTop; y < drawBottom; y++)        {            for (x = drawRight; x >= drawLeft; x--)            {                tile = mapData[y][x];                if (!tile || tile.index === -1 || !tile.visible || tile.alpha === 0)                {                    continue;                }                if (!skipCull && !CheckIsoBounds(x, y, layer, camera))                {                    continue;                }                outputArray.push(tile);            }        }    }    else if (renderOrder === 2)    {        for (y = drawBottom; y >= drawTop; y--)        {            for (x = drawLeft; x < drawRight; x++)            {                tile = mapData[y][x];                if (!tile || tile.index === -1 || !tile.visible || tile.alpha === 0)                {                    continue;                }                if (!skipCull && !CheckIsoBounds(x, y, layer, camera))                {                    continue;                }                outputArray.push(tile);            }        }    }    else if (renderOrder === 3)    {        for (y = drawBottom; y >= drawTop; y--)        {            for (x = drawRight; x >= drawLeft; x--)            {                tile = mapData[y][x];                if (!tile || tile.index === -1 || !tile.visible || tile.alpha === 0)                {                    continue;                }                if (!skipCull && !CheckIsoBounds(x, y, layer, camera))                {                    continue;                }                outputArray.push(tile);            }        }    }    tilemapLayer.tilesDrawn = outputArray.length;    tilemapLayer.tilesTotal = mapWidth * mapHeight;    return outputArray;};module.exports = IsometricCullTiles;