var Vector2 = require('../../math/Vector2');var IsometricWorldToTileXY = function (worldX, worldY, snapToFloor, point, camera, layer, originTop){    if (!point) { point = new Vector2(); }    var tileWidth = layer.baseTileWidth;    var tileHeight = layer.baseTileHeight;    var tilemapLayer = layer.tilemapLayer;    if (tilemapLayer)    {        if (!camera) { camera = tilemapLayer.scene.cameras.main; }        worldY = worldY - (tilemapLayer.y + camera.scrollY * (1 - tilemapLayer.scrollFactorY));        tileHeight *= tilemapLayer.scaleY;        worldX = worldX - (tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX));        tileWidth *= tilemapLayer.scaleX;    }    var tileWidthHalf = tileWidth / 2;    var tileHeightHalf = tileHeight / 2;    worldX = worldX - tileWidthHalf;    if (!originTop)    {        worldY = worldY - tileHeight;    }    var x = 0.5 * (worldX / tileWidthHalf + worldY / tileHeightHalf);    var y = 0.5 * (-worldX / tileWidthHalf + worldY / tileHeightHalf);    if (snapToFloor)    {        x = Math.floor(x);        y = Math.floor(y);    }    return point.set(x, y);};module.exports = IsometricWorldToTileXY;