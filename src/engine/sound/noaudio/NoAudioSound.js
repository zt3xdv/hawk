var BaseSound = require('../BaseSound');var Class = require('../../utils/Class');var EventEmitter = require('eventemitter3');var Extend = require('../../utils/object/Extend');var NOOP = require('../../utils/NOOP');var returnFalse = function (){    return false;};var returnNull = function (){    return null;};var returnThis = function (){    return this;};var NoAudioSound = new Class({    Extends: EventEmitter,    initialize:    function NoAudioSound (manager, key, config)    {        if (config === void 0) { config = {}; }        EventEmitter.call(this);        this.manager = manager;        this.key = key;        this.isPlaying = false;        this.isPaused = false;        this.totalRate = 1;        this.duration = 0;        this.totalDuration = 0;        this.config = Extend({            mute: false,            volume: 1,            rate: 1,            detune: 0,            seek: 0,            loop: false,            delay: 0,            pan: 0        }, config);        this.currentConfig = this.config;        this.mute = false;        this.volume = 1;        this.rate = 1;        this.detune = 0;        this.seek = 0;        this.loop = false;        this.pan = 0;        this.markers = {};        this.currentMarker = null;        this.pendingRemove = false;    },    addMarker: returnFalse,    updateMarker: returnFalse,    removeMarker: returnNull,    play: returnFalse,    pause: returnFalse,    resume: returnFalse,    stop: returnFalse,    setMute: returnThis,    setVolume: returnThis,    setRate: returnThis,    setDetune: returnThis,    setSeek: returnThis,    setLoop: returnThis,    setPan: returnThis,    applyConfig: returnNull,    resetConfig: returnNull,    update: NOOP,    calculateRate: returnNull,    destroy: function ()    {        BaseSound.prototype.destroy.call(this);    }});module.exports = NoAudioSound;