var AnimationState = require('../../animations/AnimationState');var Class = require('../../utils/Class');var Components = require('../components');var GameObject = require('../GameObject');var SpriteRender = require('./SpriteRender');var Sprite = new Class({    Extends: GameObject,    Mixins: [        Components.Alpha,        Components.BlendMode,        Components.Depth,        Components.Flip,        Components.GetBounds,        Components.Mask,        Components.Origin,        Components.Pipeline,        Components.PostPipeline,        Components.ScrollFactor,        Components.Size,        Components.TextureCrop,        Components.Tint,        Components.Transform,        Components.Visible,        SpriteRender    ],    initialize:    function Sprite (scene, x, y, texture, frame)    {        GameObject.call(this, scene, 'Sprite');        this._crop = this.resetCropObject();        this.anims = new AnimationState(this);        this.setTexture(texture, frame);        this.setPosition(x, y);        this.setSizeToFrame();        this.setOriginFromFrame();        this.initPipeline();        this.initPostPipeline(true);    },    addedToScene: function ()    {        this.scene.sys.updateList.add(this);    },    removedFromScene: function ()    {        this.scene.sys.updateList.remove(this);    },    preUpdate: function (time, delta)    {        this.anims.update(time, delta);    },    play: function (key, ignoreIfPlaying)    {        return this.anims.play(key, ignoreIfPlaying);    },    playReverse: function (key, ignoreIfPlaying)    {        return this.anims.playReverse(key, ignoreIfPlaying);    },    playAfterDelay: function (key, delay)    {        return this.anims.playAfterDelay(key, delay);    },    playAfterRepeat: function (key, repeatCount)    {        return this.anims.playAfterRepeat(key, repeatCount);    },    chain: function (key)    {        return this.anims.chain(key);    },    stop: function ()    {        return this.anims.stop();    },    stopAfterDelay: function (delay)    {        return this.anims.stopAfterDelay(delay);    },    stopAfterRepeat: function (repeatCount)    {        return this.anims.stopAfterRepeat(repeatCount);    },    stopOnFrame: function (frame)    {        return this.anims.stopOnFrame(frame);    },    toJSON: function ()    {        return Components.ToJSON(this);    },    preDestroy: function ()    {        this.anims.destroy();        this.anims = undefined;    }});module.exports = Sprite;